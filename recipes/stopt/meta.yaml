# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe
# If your package is python based, we recommend using Grayskull to generate it instead:
# https://github.com/conda-incubator/grayskull

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 16 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "stopt" %}
{% set version = "0.4.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  git_url: https://gitlab.com/stochastic-control/StOpt
  # git_rev: {{ version }} # (Defaults to "HEAD")
  # git_depth: 1 # (Defaults to -1/not shallow)

# source:
#   # url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
#   # If getting the source from GitHub, remove the line above,
#   # uncomment the line below, and modify as needed. Use releases if available:
#   url: https://gitlab.com/smspp/smspp-project/-/archive/{{ version }}/smspp-project-{{ version }}.tar.gz
#   # and otherwise fall back to archive:
#   # url: https://github.com/simplejson/simplejson/archive/v{{ version }}.tar.gz
#   sha256: 78f5ff9935a9177875e01598670c6cd39861b339af3e6706d48a6c0279a36d0a
#   # sha256 is the preferred checksum -- you can get it for a file with:
#   #  `openssl sha256 <file name>`.
#   # You may need the openssl package, available on conda-forge:
#   #  `conda install openssl -c conda-forge``

build:
  number: 0

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ stdlib('c') }}
    - cmake >=3.15
    - make
    - pkgconfig [unix]
  host:
    - boost
    - libboost-mpi
    - mpich [unix]
    - msmpi [win]
    - _openmp_mutex [linux]
    - eigen
    - coin-or-utils
    - coin-or-clp
    - coin-or-osi
    - bzip2
    - zlib
  run:
    - boost
    - libboost-mpi
    - mpich [unix]
    - msmpi [win]
    - _openmp_mutex [linux]
    - eigen
    - coin-or-utils
    - coin-or-clp
    - coin-or-osi
    - bzip2
    - zlib

test:
  requires:
    - scip
  commands:
    - ctest

about:
  home: https://gitlab.com/stochastic-control/StOpt
  summary: 'Library for stochastic control'
  description: |
    The STochastic OPTimization library (StOpt) aims at providing tools in C++ for solvingsome stochastic optimization problems encountered in finance or in the industry.
  license: GPL-3.0
  license_family: GPL
  license_file: COPYING
  doc_url: https://gitlab.com/stochastic-control/StOpt
  dev_url: https://gitlab.com/stochastic-control/StOpt

extra:
  recipe-maintainers:
    - davide-f
