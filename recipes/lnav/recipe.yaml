context:
  name: lnav
  version: "0.12.4"

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  url: https://github.com/tstack/${{ name|lower }}/releases/download/v${{ version }}/${{ name|lower }}-${{ version }}.tar.gz
  sha256: e1e70c9e5a2fce21da80eec9b9c3adb09fd05e03986285098a9f2567c1eb4792

build:
  number: 0
  skip:
    - win
  script: |
    set -exo pipefail

    if [[ "$OSX_ARCH" == "x86_64" ]]; then
      export MACOSX_DEPLOYMENT_TARGET=10.15
      export CXXFLAGS="${CXXFLAGS} -mmacosx-version-min=10.15"
    fi

    export CXXFLAGS="${CXXFLAGS} -fpermissive -std=c++17"

    ./configure \
      --prefix=${PREFIX} \
      --with-sqlite3=${PREFIX} \
      --with-readline=${PREFIX} \
      --with-libarchive=${PREFIX} \
      --with-ncurses=${PREFIX} \
      --with-pcre2=${PREFIX} \
      --with-libcurl=${PREFIX} \
      --with-jemalloc=${PREFIX} \
      --disable-dependency-tracking \
      --disable-silent-rules \
      --disable-static

    # # Adjust the path to where libprqlc_c.a is generated in the conda system and cargo
    # sed -i.bak \
    #   -e 's|\(RUST_DEPS_LIBS *= *\$(PRQLC_DIR)/\)release|\1*/release|' \
    #   -e 's|env CARGO_TARGET_DIR=third-party/prqlc-c/target|env CARGO_TARGET_DIR=third-party/prqlc-c/target/*|' \
    #   -e 's|\$(PRQLC_DIR)/release/libprqlc_c.a|$(PRQLC_DIR)/*/release/libprqlc_c.a|' \
    #   src/Makefile.am

    make -j${CPU_COUNT} V=1
    make install
    cargo-bundle-licenses --format yaml --output THIRDPARTY.yml

requirements:
  build:
    - ${{ compiler('c') }}
    - ${{ compiler('cxx') }}
    # - ${{ stdlib("c") }}
    - ${{ compiler('rust') }}
    # - autoconf
    # - automake
    - make
    - cargo-bundle-licenses
    # - libtool
    # - m4
    # - perl
    - pkg-config
  host:
    - bzip2
    - curl
    - jemalloc
    - libarchive
    - libunistring
    - ncurses
    - pcre2
    - readline
    - sqlite
    - zlib

tests:
  - script:
    - lnav -V
    - printf 'lnav' | lnav -n -c ';from [{ col1=1 }] | take 1' | grep -q col1

about:
  homepage: https://lnav.org
  repository: https://github.com/tstack/lnav
  documentation: https://docs.lnav.org
  license: BSD-2-Clause
  license_family: BSD-2
  license_file:
    - LICENSE
    - THIRDPARTY.yml
  summary: "A log file viewer for the terminal"
  description: |
    The Logfile Navigator is a log file viewer for the terminal. Given a set of files/directories, lnav will:

      - decompress as needed;
      - detect their format;
      - merge the files by time into a single view;
      - tail the files, follow renames, find new files in directories;
      - build an index of errors and warnings;
      - pretty-print JSON-lines.

    Then, in the lnav TUI, you can:

      - jump quickly to the previous/next error (press e/E);
      - search using regular expressions (press /);
      - highlight text with a regular expression (:highlight command);
      - filter messages using regular expressions or SQLite expressions;
      - pretty-print structured text (press P);
      - view a histogram of messages over time (press i);
      - analyze messages using SQLite (press ;)

extra:
  recipe-maintainers:
    - eunos-1128
