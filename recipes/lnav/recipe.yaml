context:
  name: lnav
  version: "0.12.4"

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  url: https://github.com/tstack/${{ name|lower }}/releases/download/v${{ version }}/${{ name|lower }}-${{ version }}.tar.gz
  sha256: e1e70c9e5a2fce21da80eec9b9c3adb09fd05e03986285098a9f2567c1eb4792

build:
  number: 0
  skip:
    - win
  script: |
    set -exo pipefail

    if [[ "$OSX_ARCH" == "x86_64" ]]; then
      export MACOSX_DEPLOYMENT_TARGET=10.15
      export CXXFLAGS="${CXXFLAGS} -mmacosx-version-min=10.15"
    fi

    export CXXFLAGS="${CXXFLAGS} -fpermissive -std=c++17"

    # `ptsname_r` compatibility for macOS
    if [[ "$OSTYPE" == "darwin"* ]]; then
      # Add necessary includes and compatibility function at the top of the file
      sed -i.bak '1i\
    #if defined(__APPLE__)\
    #include <stdlib.h>\
    #include <unistd.h>\
    #include <string.h>\
    static int ptsname_compat(int fd, char* buf, size_t buflen) {\
        char* name = ptsname(fd);\
        if (!name) return -1;\
        if (strlen(name) >= buflen) return -1;\
        strcpy(buf, name);\
        return 0;\
    }\
    #else\
    #define ptsname_compat ptsname_r\
    #endif\
    ' src/readline_curses.cc

      # Replace ptsname_r calls with ptsname_compat
      sed -i.bak 's/ptsname_r(/ptsname_compat(/g' src/readline_curses.cc
    fi

    # Build prqlc-c library in advance
    cd src/third-party/prqlc-c
    cargo-bundle-licenses --format yaml --output ${SRC_DIR}/THIRDPARTY.yml
    cargo build --release
    cd ${SRC_DIR}
    PRQLC_DIR=${SRC_DIR}/src/third-party/prqlc-c/target
    mkdir -p ${PRQLC_DIR}/release
    find "${PRQLC_DIR}" -type f \( -name 'libprqlc_c.a' -o -name 'libprqlc_c.d' \) \
      -exec cp {} "${PRQLC_DIR}/release/" \;

    ./configure \
      --prefix=${PREFIX} \
      --with-sqlite3=${PREFIX} \
      --with-readline=${PREFIX} \
      --with-libarchive=${PREFIX} \
      --with-ncurses=${PREFIX} \
      --with-pcre2=${PREFIX} \
      --with-libcurl=${PREFIX} \
      --with-jemalloc=${PREFIX} \
      --disable-dependency-tracking \
      --disable-silent-rules

    make -j${CPU_COUNT} V=1
    make install

requirements:
  build:
    - ${{ compiler('c') }}
    - ${{ compiler('cxx') }}
    - ${{ compiler('rust') }}
    - ${{ stdlib("c") }}
    - cargo-bundle-licenses
    - make
    - pkg-config
  host:
    - bzip2
    - jemalloc
    - libarchive
    - libcurl >=7.80.0
    - libunistring
    - ncurses
    - pcre2
    - readline
    - sqlite
    - zlib
  run:
    - libcurl >=7.80.0

tests:
  - script:
    - lnav -V
    - printf 'lnav' | lnav -n -c ';from [{ col1=1 }] | take 1' | grep -q col1

about:
  homepage: https://lnav.org
  repository: https://github.com/tstack/lnav
  documentation: https://docs.lnav.org
  license: BSD-2-Clause
  license_family: BSD-2
  license_file:
    - LICENSE
    - THIRDPARTY.yml
  summary: "A log file viewer for the terminal"
  description: |
    The Logfile Navigator is a log file viewer for the terminal. Given a set of files/directories, lnav will:

      - decompress as needed;
      - detect their format;
      - merge the files by time into a single view;
      - tail the files, follow renames, find new files in directories;
      - build an index of errors and warnings;
      - pretty-print JSON-lines.

    Then, in the lnav TUI, you can:

      - jump quickly to the previous/next error (press e/E);
      - search using regular expressions (press /);
      - highlight text with a regular expression (:highlight command);
      - filter messages using regular expressions or SQLite expressions;
      - pretty-print structured text (press P);
      - view a histogram of messages over time (press i);
      - analyze messages using SQLite (press ;)

extra:
  recipe-maintainers:
    - eunos-1128
